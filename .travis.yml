---
sudo: required

env:
  global:
    - role: ansible-role-user_management
  matrix:
    - distribution: debian
      version: buster

services:
  - docker

before_install:
  - 'sudo docker pull ${distribution}:${version}'
  - 'sudo docker build --no-cache --rm --file=travis/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible travis'

#before_install:
#- docker pull carlad/sinatra
#- docker run -d -p 127.0.0.1:80:4567 carlad/sinatra /bin/sh -c "cd /root/sinatra; bundle exec foreman start;"
#- docker ps -a
#- docker run carlad/sinatra /bin/sh -c "cd /root/sinatra; bundle exec rake test"

env:
  - distribution: debian
    version: stretch
  - distribution: debian
    version: buster

#addons:
#  apt:
#    packages:
#    - python-pip

#install:
  # Install ansible
#  - pip install ansible>=2.7,<2.8

  # Check ansible version
#  - ansible --version

  # Create ansible.cfg with correct roles_path
#  - printf '[defaults]\nroles_path=../' > ansible.cfg

  # Ansible dependencies
#  - ansible-galaxy install jpnewman.java
#  - ansible-galaxy install jpnewman.apache
#  - ansible-galaxy install retr0h.logrotate

#script:
  # Basic role syntax check
#  - ansible-playbook tests/test.yml -i tests/inventory --syntax-check

script:
  - container_id=$(mktemp)
  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/${role}:ro ${distribution}-${version}:ansible > "${container_id}"'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/${role}/travis/test.yml --syntax-check'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/${role}/travis/test.yml'
  - >
    sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/nginx_role/travis/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  - 'sudo docker rm -f "$(cat ${container_id})"'

